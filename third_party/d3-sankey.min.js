// https://github.com/d3/d3-sankey v0.12.1 Copyright 2019 Mike Bostock
!function(n,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("d3-array"),require("d3-shape")):"function"==typeof define&&define.amd?define(["exports","d3-array","d3-shape"],t):t((n=n||self).d3=n.d3||{},n.d3,n.d3)}(this,function(n,t,e){"use strict";function o(n){return n.target.depth}function r(n,t){return n.sourceLinks.length?n.depth:t-1}function i(n){return function(){return n}}function s(n,t){return u(n.source,t.source)||n.index-t.index}function f(n,t){return u(n.target,t.target)||n.index-t.index}function u(n,t){return n.y0-t.y0}function c(n){return n.value}function l(n){return n.index}function a(n){return n.nodes}function d(n){return n.links}function h(n,t){const e=n.get(t);if(!e)throw new Error("missing: "+t);return e}function g({nodes:n}){for(const t of n){let n=t.y0,e=n;for(const e of t.sourceLinks)e.y0=n+e.width/2,n+=e.width;for(const n of t.targetLinks)n.y1=e+n.width/2,e+=n.width}}function y(n){return[n.source.x1,n.y0]}function k(n){return[n.target.x0,n.y1]}n.sankey=function(){let n,e,o=0,y=0,k=1,p=1,L=24,w=8,x=l,m=r,v=a,b=d,M=6;function S(){const e={nodes:v.apply(null,arguments),links:b.apply(null,arguments)};return function({nodes:n,links:t}){for(const[t,e]of n.entries())e.index=t,e.sourceLinks=[],e.targetLinks=[];const e=new Map(n.map((t,e)=>[x(t,e,n),t]));for(const[n,o]of t.entries()){o.index=n;let{source:t,target:r}=o;"object"!=typeof t&&(t=o.source=h(e,t)),"object"!=typeof r&&(r=o.target=h(e,r)),t.sourceLinks.push(o),r.targetLinks.push(o)}}(e),function({nodes:n}){for(const e of n)e.value=Math.max(t.sum(e.sourceLinks,c),t.sum(e.targetLinks,c))}(e),function({nodes:n}){const t=n.length;let e=new Set(n),o=new Set,r=0;for(;e.size;){for(const n of e){n.depth=r;for(const{target:t}of n.sourceLinks)o.add(t)}if(++r>t)throw new Error("circular link");e=o,o=new Set}}(e),function({nodes:n}){const t=n.length;let e=new Set(n),o=new Set,r=0;for(;e.size;){for(const n of e){n.height=r;for(const{source:t}of n.targetLinks)o.add(t)}if(++r>t)throw new Error("circular link");e=o,o=new Set}}(e),function(e){const r=function({nodes:e}){const r=t.max(e,n=>n.depth)+1,i=(k-o-L)/(r-1),s=new Array(r);for(const n of e){const t=Math.max(0,Math.min(r-1,Math.floor(m.call(null,n,r))));n.layer=t,n.x0=o+t*i,n.x1=n.x0+L,s[t]?s[t].push(n):s[t]=[n]}if(n)for(const t of s)t.sort(n);return s}(e);!function(n){const e=t.min(n,n=>(p-y-(n.length-1)*w)/t.sum(n,c));for(const t of n){let n=y;for(const o of t){o.y0=n,o.y1=n+o.value*e,n=o.y1+w;for(const n of o.sourceLinks)n.width=n.value*e}n=(p-n+w)/(t.length+1);for(let e=0;e<t.length;++e){const o=t[e];o.y0+=n*(e+1),o.y1+=n*(e+1)}P(t)}}(r);for(let n=0;n<M;++n){const t=Math.pow(.99,n),e=Math.max(1-t,(n+1)/M);j(r,t,e),z(r,t,e)}}(e),g(e),e}function z(t,e,o){for(let r=1,i=t.length;r<i;++r){const i=t[r];for(const n of i){let t=0,o=0;for(const{source:e,value:r}of n.targetLinks){let i=r*(n.layer-e.layer);t+=_(e,n)*i,o+=i}if(!(o>0))continue;let r=(t/o-n.y0)*e;n.y0+=r,n.y1+=r,H(n)}void 0===n&&i.sort(u),E(i,o)}}function j(t,e,o){for(let r=t.length-2;r>=0;--r){const i=t[r];for(const n of i){let t=0,o=0;for(const{target:e,value:r}of n.sourceLinks){let i=r*(e.layer-n.layer);t+=C(n,e)*i,o+=i}if(!(o>0))continue;let r=(t/o-n.y0)*e;n.y0+=r,n.y1+=r,H(n)}void 0===n&&i.sort(u),E(i,o)}}function E(n,t){const e=n.length>>1,o=n[e];A(n,o.y0-w,e-1,t),q(n,o.y1+w,e+1,t),A(n,p,n.length-1,t),q(n,y,0,t)}function q(n,t,e,o){for(;e<n.length;++e){const r=n[e],i=(t-r.y0)*o;i>1e-6&&(r.y0+=i,r.y1+=i),t=r.y1+w}}function A(n,t,e,o){for(;e>=0;--e){const r=n[e],i=(r.y1-t)*o;i>1e-6&&(r.y0-=i,r.y1-=i),t=r.y0-w}}function H({sourceLinks:n,targetLinks:t}){if(void 0===e){for(const{source:{sourceLinks:n}}of t)n.sort(f);for(const{target:{targetLinks:t}}of n)t.sort(s)}}function P(n){if(void 0===e)for(const{sourceLinks:t,targetLinks:e}of n)t.sort(f),e.sort(s)}function _(n,t){let e=n.y0-(n.sourceLinks.length-1)*w/2;for(const{target:o,width:r}of n.sourceLinks){if(o===t)break;e+=r+w}for(const{source:o,width:r}of t.targetLinks){if(o===n)break;e-=r}return e}function C(n,t){let e=t.y0-(t.targetLinks.length-1)*w/2;for(const{source:o,width:r}of t.targetLinks){if(o===n)break;e+=r+w}for(const{target:o,width:r}of n.sourceLinks){if(o===t)break;e-=r}return e}return S.update=function(n){return g(n),n},S.nodeId=function(n){return arguments.length?(x="function"==typeof n?n:i(n),S):x},S.nodeAlign=function(n){return arguments.length?(m="function"==typeof n?n:i(n),S):m},S.nodeSort=function(t){return arguments.length?(n=t,S):n},S.nodeWidth=function(n){return arguments.length?(L=+n,S):L},S.nodePadding=function(n){return arguments.length?(w=+n,S):w},S.nodes=function(n){return arguments.length?(v="function"==typeof n?n:i(n),S):v},S.links=function(n){return arguments.length?(b="function"==typeof n?n:i(n),S):b},S.linkSort=function(n){return arguments.length?(e=n,S):e},S.size=function(n){return arguments.length?(o=y=0,k=+n[0],p=+n[1],S):[k-o,p-y]},S.extent=function(n){return arguments.length?(o=+n[0][0],k=+n[1][0],y=+n[0][1],p=+n[1][1],S):[[o,y],[k,p]]},S.iterations=function(n){return arguments.length?(M=+n,S):M},S},n.sankeyCenter=function(n){return n.targetLinks.length?n.depth:n.sourceLinks.length?t.min(n.sourceLinks,o)-1:0},n.sankeyLeft=function(n){return n.depth},n.sankeyRight=function(n,t){return t-1-n.height},n.sankeyJustify=r,n.sankeyLinkHorizontal=function(){return e.linkHorizontal().source(y).target(k)},Object.defineProperty(n,"__esModule",{value:!0})});
